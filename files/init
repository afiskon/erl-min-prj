#!/bin/bash

### BEGIN INIT INFO
# Provides:          phonebook
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Simple Phonebook
# Description:       Simple Phonebook
### END INIT INFO

NAME=phonebook
DESC="Simple Phonebook"

PATH=/sbin:/usr/sbin:/bin:/usr/bin
BASE_DIR=/usr/lib/$NAME
DAEMON=$BASE_DIR/bin/$NAME
SCRIPTNAME=/etc/init.d/$NAME
USER=$NAME

# Get ERTS_PATH
START_ERL=`cat $BASE_DIR/releases/start_erl.data`
ERTS_VSN=${START_ERL% *}
ERTS_PATH=$BASE_DIR/erts-$ERTS_VSN/bin

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	RETVAL=`$DAEMON ping`
	[ "$RETVAL" = "pong" ] && return 1

	su - $USER -c "$DAEMON start" || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Try to stop first
	RETVAL=`su - $USER -c "$DAEMON ping"`
	[ "$RETVAL" = "pong" ] && su - $USER -c "$DAEMON stop 2>&1 >/dev/null"
	sleep 2
	RETVAL=`pidof $ERTS_PATH/beam.smp`
	[ "$RETVAL" = "" ] && return 0
	#
	# It didn't exit nicely, be mean.
	#
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop \
		--quiet \
		--retry=TERM/30/KILL/5 \
		--user $USER \
		--exec $ERTS_PATH/beam.smp
	return $?
}

#
# Function that graceful reload the daemon/service
#
do_reload() {
        # Restart the VM without exiting the process
        su - $USER -c "$DAEMON restart" && return $? || return 2
}


case "$1" in
  start)
	log_daemon_msg "Starting $DESC" || true
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" || true
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  ping)
	# See if the VM is alive
	$DAEMON ping || exit $?
	;;
  reload|force-reload)
	log_daemon_msg "Reloading $DESC" "$NAME" || true
	do_reload
	log_end_msg $?
	;;
  restart)
	log_daemon_msg "Restarting $DESC" "$NAME" || true
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|ping|restart|force-reload}" >&2
	exit 3
	;;
esac
